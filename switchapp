#!/bin/bash

desktopid=$(xdotool get_desktop)
exp=$desktopid'$'
lineseparated_ids=$(wmctrl -l | grep -o "0x[0-9a-zA-Z]\+\s\+${desktopid}" | cut -d' ' -f1)
echo "lineseparated_id=$lineseparated_ids"

spaceseparated_ids=$(echo $lineseparated_ids)
echo "spaceseparated_ids=$spaceseparated_ids"

IFS=' ' 
read -r -a ids <<< "$spaceseparated_ids"
echo "ids=$ids"

length=${#ids[@]}
echo "length=$length"

if [[ $length -eq 0 ]]; then exit 0; fi # if no active windows, stop executing this script

active_id=$(printf 0x%x $(xdotool getactivewindow)) # convert from dec to hex
echo "active_id=$active_id"
if [[ $active_id -eq 0x0 ]]; then 
	active_id=${ids[0]} ; 
	echo "> No active window (may be all are minimized) so defaulting to the first window (winid=$active_id) among the opening ones."
fi

declare reverse=false
if [[ $1 = "reverse" ]]; then reverse=true; fi
echo "reverse=$reverse"

for ((i=0; i<length; i++))
do
	echo xxx
	echo "active_id=$active_id, id[$i]=${ids[$i]}"
	
	if [[ $active_id -eq ${ids[$i]} ]]; then
		echo yyy
	
		next_idx=-1
		
		if [[ $reverse = "true" ]]; then
			echo "aaa"
			
			if [[ $((i-1)) -lt 0 ]]; then
				echo aaa1
				next_idx=$((length-1))
			else
				echo aaa2
				next_idx=$((i-1))
			fi
		else
			echo bbb
			if [[ $((i+1)) -eq $length ]]; then
				echo bbb1
				next_idx=0
			else
				echo bbb2
				next_idx=$((i+1))
			fi
		fi
		
		next_id=${ids[$next_idx]}
		dec_nextid=$(printf %i $next_id)
		
		echo "> Activate next window $next_id (dec=$dec_nextid) [i=$i, next_idx=$next_idx]"
		
		xdotool windowactivate $dec_nextid
		
		break
	fi
done

